// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using adesoft.adepos.webview.Data.Model;

namespace adesoft.adepos.webview.Migrations
{
    [DbContext(typeof(AdeposDBContext))]
    [Migration("20231020042544_4")]
    partial class _4
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.AccountingAccount", b =>
                {
                    b.Property<long>("AccountingAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AccountOwnerId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Balance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TypeAccountingAccountId")
                        .HasColumnType("bigint");

                    b.HasKey("AccountingAccountId");

                    b.HasIndex("TypeAccountingAccountId");

                    b.ToTable("AccountingAccounts");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.ActionApp", b =>
                {
                    b.Property<long>("ActionAppId")
                        .HasColumnType("bigint");

                    b.Property<string>("Icon")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long?>("IdFather")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Label")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("MenuId")
                        .HasColumnType("bigint");

                    b.Property<string>("NameAction")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderNum")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ActionAppId");

                    b.ToTable("ActionApps");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.AlertXOrder", b =>
                {
                    b.Property<long>("AlertXOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateRecord")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAttend")
                        .HasColumnType("bit");

                    b.Property<long>("TransactionId")
                        .HasColumnType("bigint");

                    b.HasKey("AlertXOrderId");

                    b.ToTable("AlertXOrders");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.BudgetRent", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountBudget")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommonDataId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommonDataName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.Property<string>("ZoneId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("BudgetRents");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.Category", b =>
                {
                    b.Property<long>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NickName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("State")
                        .HasColumnType("bit");

                    b.Property<long>("TypeCategoryId")
                        .HasColumnType("bigint");

                    b.HasKey("CategoryId");

                    b.ToTable("Categorys");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.CodeNovedad", b =>
                {
                    b.Property<long>("CodeNovedadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("NovedadAbrev")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NovedadName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaneType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Syncode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeNovedadName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CodeNovedadId");

                    b.ToTable("CodeNovedads");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.Company", b =>
                {
                    b.Property<long>("CompanyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Code")
                        .HasColumnType("bigint");

                    b.Property<decimal>("ComisionCredit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsAccountAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("IsEnabled")
                        .HasColumnType("bit");

                    b.Property<long>("MenuId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeAPP")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CompanyId");

                    b.ToTable("Companys");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.ControlStateTransaction", b =>
                {
                    b.Property<long>("ControlStateTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("OrderNum")
                        .HasColumnType("bigint");

                    b.Property<long>("StateTransactionId")
                        .HasColumnType("bigint");

                    b.Property<long>("StateTransactionShowId")
                        .HasColumnType("bigint");

                    b.HasKey("ControlStateTransactionId");

                    b.ToTable("ControlStateTransactions");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.DeletedDetailTransactionGeneric", b =>
                {
                    b.Property<long>("DetailTransactionGenericId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cant")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InventarioPendiente")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsRawMaterial")
                        .HasColumnType("bit");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("ObservationAuditory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OtherDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceUnd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoInventaryAfter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoInventaryBefore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("TransactionGenericId")
                        .HasColumnType("bigint");

                    b.Property<string>("TransactionState")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("DetailTransactionGenericId");

                    b.HasIndex("ItemId");

                    b.ToTable("DeletedDetailTransactionGenerics");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.DetailProduction", b =>
                {
                    b.Property<long>("DetailProductionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cant")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("Observation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo1Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo2Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo3Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ProductionId")
                        .HasColumnType("bigint");

                    b.HasKey("DetailProductionId");

                    b.HasIndex("ProductionId");

                    b.ToTable("DetailProductions");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.DetailProductionTercero", b =>
                {
                    b.Property<long>("DetailProductionTerceroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("ProductionId")
                        .HasColumnType("bigint");

                    b.Property<long>("TerceroId")
                        .HasColumnType("bigint");

                    b.HasKey("DetailProductionTerceroId");

                    b.HasIndex("ProductionId");

                    b.ToTable("DetailProductionTerceros");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.DetailReportDynamic", b =>
                {
                    b.Property<long>("DetailReportDynamicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Accounts")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Centros")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NitTercero")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrderNum")
                        .HasColumnType("bigint");

                    b.Property<long>("PositionNum")
                        .HasColumnType("bigint");

                    b.Property<long>("ReportDynamicId")
                        .HasColumnType("bigint");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DetailReportDynamicId");

                    b.ToTable("DetailReportDynamics");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.DetailTransactionGeneric", b =>
                {
                    b.Property<long>("DetailTransactionGenericId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Cant")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("InventarioPendiente")
                        .HasColumnType("decimal(18,2)");

                    b.Property<bool>("IsRawMaterial")
                        .HasColumnType("bit");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<string>("ObservationAuditory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("OtherDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceUnd")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoInventaryAfter")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("SaldoInventaryBefore")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("TransactionGenericId")
                        .HasColumnType("bigint");

                    b.Property<string>("TransactionState")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.HasKey("DetailTransactionGenericId");

                    b.HasIndex("ItemId");

                    b.HasIndex("TransactionGenericId");

                    b.ToTable("DetailTransactionGenerics");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.ElectronicBilling.ClosingInvoiced", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("AdminName")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<bool>("Confirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ConfirmedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CustomerNum")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EBDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EBNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OthersWorkNo")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Period")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<decimal>("TotalInvoiceAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("WorkName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("WorkNo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ZoneId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ZoneParentId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("ZoneParentName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("ClosingsInvoiced");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.ElectronicBilling.ClosingInvoicedNote", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("AttachFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClosingInvoicedId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("ClosingInvoicedId");

                    b.ToTable("ClosingInvoicedNotes");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.ElectronicBilling.OPInvoiced", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("AdminName")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<bool>("Confirmed")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ConfirmedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CustomerNum")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EBDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EBNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OPNum")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("Period")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<decimal>("TotalInvoiceAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("WorkName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("WorkNo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ZoneId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ZoneParentId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("ZoneParentName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("OPsInvoiced");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.ElectronicBilling.OPInvoicedNote", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("AttachFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OPInvoicedId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("OPInvoicedId");

                    b.ToTable("OPInvoicedNotes");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.ElectronicBilling.SalesInvoice", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<decimal>("AdditionalCharges")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("AdminName")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("BillingNote")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CancelledDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ConfirmedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("CustomerNum")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EBDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EBNumber")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("InvoiceNum")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("LastTrackingDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("NetAmountValue")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PO")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<string>("Period")
                        .HasColumnType("nvarchar(8)")
                        .HasMaxLength(8);

                    b.Property<decimal>("ProductCharges")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("RecordStatus")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<decimal>("Rent")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<bool>("RequiredActa")
                        .HasColumnType("bit");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalBalanceAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<decimal>("TotalInvoiceAmount")
                        .HasColumnType("decimal(18, 2)");

                    b.Property<string>("WorkName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("WorkNo")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<string>("ZoneId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("ZoneName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ZoneParentId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("ZoneParentName")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("SalesInvoices");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.ElectronicBilling.SalesInvoiceNote", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("AttachFileName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NoteType")
                        .HasColumnType("int");

                    b.Property<string>("SalesInvoiceId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.HasIndex("SalesInvoiceId");

                    b.ToTable("SalesInvoiceNotes");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.InventoryXTransaction", b =>
                {
                    b.Property<long>("InventoryXTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CantEntry")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CantNet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CantOut")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Costo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateTransaction")
                        .HasColumnType("datetime2");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<long>("TransactionId")
                        .HasColumnType("bigint");

                    b.Property<long>("TypeTransactionId")
                        .HasColumnType("bigint");

                    b.Property<long>("WarehouseId")
                        .HasColumnType("bigint");

                    b.HasKey("InventoryXTransactionId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("InventoryXTransactions");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.Item", b =>
                {
                    b.Property<long>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Area")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Barcode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("HasIventory")
                        .HasColumnType("bit");

                    b.Property<bool>("IsCompuesto")
                        .HasColumnType("bit");

                    b.Property<decimal>("PrecioBase")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioDef")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PrecioSyncode")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("PriceCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Syncode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("TypeTaxId")
                        .HasColumnType("bigint");

                    b.Property<long>("UnitMeasurementId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ZoneProductId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<long>("categoryMedicionId")
                        .HasColumnType("bigint");

                    b.HasKey("ItemId");

                    b.HasIndex("CategoryId");

                    b.HasIndex("TypeTaxId");

                    b.HasIndex("UnitMeasurementId");

                    b.HasIndex("ZoneProductId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.ItemKit", b =>
                {
                    b.Property<long>("ItemFatherId")
                        .HasColumnType("bigint");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Cant")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ItemFatherId", "ItemId");

                    b.HasIndex("ItemId");

                    b.ToTable("ItemKits");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.LedgerEstimate", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountEstimate")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommonDataId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CommonDataName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Month")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("LedgerEstimates");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.LocationGeneric", b =>
                {
                    b.Property<long>("LocationGenericId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ChartDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsPlanta")
                        .HasColumnType("bit");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SyncCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TypeLocation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("LocationGenericId");

                    b.ToTable("LocationGenerics");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.LogisticMasterData", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdentificationNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("LogisticMasterData");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.MovementInventory", b =>
                {
                    b.Property<long>("MovementInventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CantMov")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CantNet")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CantNow")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateRecord")
                        .HasColumnType("datetime2");

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<bool>("LastRecord")
                        .HasColumnType("bit");

                    b.Property<long>("TransactionId")
                        .HasColumnType("bigint");

                    b.Property<long>("TypeTransactionId")
                        .HasColumnType("bigint");

                    b.Property<long>("WarehouseId")
                        .HasColumnType("bigint");

                    b.HasKey("MovementInventoryId");

                    b.HasIndex("ItemId");

                    b.HasIndex("WarehouseId");

                    b.ToTable("MovementInventorys");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.NominaNovedad", b =>
                {
                    b.Property<long>("NominaNovedadId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CodeNovedadId")
                        .HasColumnType("bigint");

                    b.Property<string>("ConsecutiveMobileId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DayInit")
                        .HasColumnType("datetime2");

                    b.Property<bool>("FullDay")
                        .HasColumnType("bit");

                    b.Property<TimeSpan>("HoursNovedad")
                        .HasColumnType("time");

                    b.Property<decimal>("HoursNovedad2")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("NominaProgramationId")
                        .HasColumnType("bigint");

                    b.Property<string>("Observation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PathDocumentoAdjunto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StateNovedad")
                        .HasColumnType("bigint");

                    b.Property<long>("TerceroId")
                        .HasColumnType("bigint");

                    b.Property<string>("TypeNovedadName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NominaNovedadId");

                    b.ToTable("NominaNovedads");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.NominaProgramation", b =>
                {
                    b.Property<long>("NominaProgramationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DayClose")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DayEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DayInit")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StateProgramation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NominaProgramationId");

                    b.ToTable("NominaProgramations");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.OportunidadesCRM", b =>
                {
                    b.Property<long>("OportunidadID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("APROBACION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CLIENTE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COD_ETAPA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("COMERCIAL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CONSECUTIVO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CONTACTO_CLIENTE")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("DURACION")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ETAPA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FECHA_ANTICIPO")
                        .HasColumnType("datetime2");

                    b.Property<string>("FECHA_APERTURA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FECHA_APERTURA_")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FECHA_DESPACHO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FECHA_ENVIO")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FECHA_RECEP")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FECHA_RECEP_DOC")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("FECHA_SOLICI_DOC")
                        .HasColumnType("datetime2");

                    b.Property<string>("FECHA_ULT_MOD")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FECHA_ULT_MOD_")
                        .HasColumnType("datetime2");

                    b.Property<string>("HISTORIAL_OBRA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsEdited")
                        .HasColumnType("bit");

                    b.Property<string>("NIT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NUM_CUENTA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NUM_OP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OBRA")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OBSERVATION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OPRT_NUMERO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TIPO_NEGOCIO")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TIPO_OPRT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal?>("TONELADA")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("VR_RENTA_MENSUAL")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("VR_VENTA")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OportunidadID");

                    b.ToTable("OportunidadesCRM");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.PL.LastSyncOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LastSyncDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("LastSyncOrders");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.PL.Order", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccordingNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("CustomerAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DispatchDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("DispatchId")
                        .HasColumnType("bigint");

                    b.Property<string>("DriverName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ErrorMessage")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FVTransport")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("InvoiceAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("InvoiceDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("InvoiceNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsConform")
                        .HasColumnType("bit");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Module")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<string>("NoConform")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OPNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Ok")
                        .HasColumnType("bit");

                    b.Property<string>("OrderNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderType")
                        .HasColumnType("int");

                    b.Property<int>("PalletNo")
                        .HasColumnType("int");

                    b.Property<DateTime>("Period")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlateNum")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Progress")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("ReponsableTrans")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReponsableTransId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReturnDateTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("SalesPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SalesPersonId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<bool>("Sync")
                        .HasColumnType("bit");

                    b.Property<DateTime>("SyncDateTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("TransactionGenericId")
                        .HasColumnType("bigint");

                    b.Property<string>("VehicleType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("int");

                    b.Property<string>("VendorAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<decimal>("Wight")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("Works")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.PL.OrderComment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDatetTime")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<int>("OrderType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OrderComments");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.PL.OrderPallet", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("ModifiedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<int>("PalletNo")
                        .HasColumnType("int");

                    b.Property<string>("QRData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("ZoneProductId")
                        .HasColumnType("nvarchar(36)");

                    b.HasKey("Id");

                    b.HasIndex("ZoneProductId");

                    b.ToTable("OrderPallets");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.PL.OrderPalletProduct", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<string>("OrderPalletId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("ZoneProductId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.HasIndex("OrderPalletId");

                    b.HasIndex("ZoneProductId");

                    b.ToTable("OrderPalletProducts");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.PL.OrderPicture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<int>("OrderType")
                        .HasColumnType("int");

                    b.Property<string>("Path")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("OrderPictures");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.PL.OrderProduct", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QtyPending")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("ZoneProductId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.HasIndex("ZoneProductId");

                    b.ToTable("OrderProducts");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.PL.OrderProductLog", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<long>("ItemId")
                        .HasColumnType("bigint");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<string>("OrderProductVersionId")
                        .HasColumnType("nvarchar(36)");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("QtyPending")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(18, 5)");

                    b.Property<string>("ZoneProductId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.HasKey("Id");

                    b.HasIndex("OrderProductVersionId");

                    b.HasIndex("ZoneProductId");

                    b.ToTable("OrderProductLogs");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.PL.OrderProductVersion", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<DateTime>("CreatedOn")
                        .HasColumnType("datetime2");

                    b.Property<long>("OrderId")
                        .HasColumnType("bigint");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<string>("VersionCode")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.HasKey("Id");

                    b.ToTable("OrderProductVersions");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.PL.OrderUploadControl", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ImagesPending")
                        .HasColumnType("int");

                    b.Property<int>("ImagesUploaded")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("OrderType")
                        .HasColumnType("int");

                    b.Property<DateTime>("SyncDateTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("OrderUploadControl");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.PL.ZoneProduct", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(60)")
                        .HasMaxLength(60);

                    b.HasKey("Id");

                    b.ToTable("ZoneProducts");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.Parameter", b =>
                {
                    b.Property<long>("ParameterId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Module")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameIdentify")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Value2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ValueType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParameterId");

                    b.ToTable("Parameters");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.Permission", b =>
                {
                    b.Property<long>("ActionAppId")
                        .HasColumnType("bigint");

                    b.Property<long>("RoleAppId")
                        .HasColumnType("bigint");

                    b.HasKey("ActionAppId", "RoleAppId");

                    b.HasIndex("RoleAppId");

                    b.ToTable("Permissions");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.Production", b =>
                {
                    b.Property<long>("ProductionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("Consecutive")
                        .HasColumnType("bigint");

                    b.Property<string>("ConsecutiveMobileId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateProduction")
                        .HasColumnType("datetime2");

                    b.Property<string>("Photo1Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo2Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo3Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StateId")
                        .HasColumnType("bigint");

                    b.Property<long>("TypeActivityId")
                        .HasColumnType("bigint");

                    b.Property<long>("UserAppId")
                        .HasColumnType("bigint");

                    b.HasKey("ProductionId");

                    b.ToTable("Productions");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.RendimientoObject", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("MonthId")
                        .HasColumnType("bigint");

                    b.Property<string>("RendimientoJsonObj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("YearId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("RendimientoObjects");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.ReportDynamic", b =>
                {
                    b.Property<long>("ReportDynamicId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ReportDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReportName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReportDynamicId");

                    b.ToTable("ReportDynamics");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.RequestCertificate", b =>
                {
                    b.Property<long>("RequestCertificateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DateRecord")
                        .HasColumnType("datetime2");

                    b.Property<string>("PathDocumentoAdjunto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("StateRequestCertificateId")
                        .HasColumnType("bigint");

                    b.Property<long>("TerceroId")
                        .HasColumnType("bigint");

                    b.Property<string>("TypeCertificate")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RequestCertificateId");

                    b.ToTable("RequestCertificates");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.RoleApp", b =>
                {
                    b.Property<long>("RoleAppId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("RoleAppId");

                    b.ToTable("RoleApps");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.Simex.Cartera", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AmountBalance")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Current")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Days1To30")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Days31To60")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Days61To90")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DocumentDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ExpirationDays")
                        .HasColumnType("int");

                    b.Property<string>("LedgerAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("More90")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Operation2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("PaymentDateEstimated")
                        .HasColumnType("datetime2");

                    b.Property<string>("Range")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Reference")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdAccount")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ThirdName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VendorName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SimexCartera");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.Simex.InventSum", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("InventLocationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("QtyOnHand")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("UnitId")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ItemId", "InventLocationId");

                    b.ToTable("SimexInventSum");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.Simex.LastUpdateModule", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("LastUpdateModule_At")
                        .HasColumnType("datetime2");

                    b.Property<string>("Module")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SimexLastUpdateModuleLog");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.Simex.Presupuesto", b =>
                {
                    b.Property<long>("YearId")
                        .HasColumnType("bigint");

                    b.Property<long>("MonthId")
                        .HasColumnType("bigint");

                    b.Property<string>("ZoneId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CategoryId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("YearId", "MonthId", "ZoneId");

                    b.ToTable("SimexPresupuesto");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.Simex.QtyMinimum", b =>
                {
                    b.Property<string>("ItemId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Qty")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("ItemId");

                    b.ToTable("SimexQtyMinimum");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.Simex.Sales", b =>
                {
                    b.Property<string>("DocumentNum")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Element")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("CostTotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CostUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CountryRegionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustVendClasification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustVendName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DocumentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ElementData2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ElementName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Idx")
                        .HasColumnType("bigint");

                    b.Property<bool>("Modified")
                        .HasColumnType("bit");

                    b.Property<int>("MovementType")
                        .HasColumnType("int");

                    b.Property<string>("Operation1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation5")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation6")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("PriceUnit")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("Qty")
                        .HasColumnType("bigint");

                    b.Property<string>("SalesPerson")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SalesPersonClasification")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SalesTotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Warehouse")
                        .HasColumnType("int");

                    b.HasKey("DocumentNum", "Element");

                    b.ToTable("SimexSales");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.Simex.SalesOrder", b =>
                {
                    b.Property<string>("SalesId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ItemId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("AmountPendingInvoiced")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("AmountPendingRecived")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("CountryRegionId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Customer")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DocumentDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ItemName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Modified")
                        .HasColumnType("bit");

                    b.Property<string>("Operation1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Operation4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("QtyOrdered")
                        .HasColumnType("bigint");

                    b.Property<long>("QtyPendingInvoiced")
                        .HasColumnType("bigint");

                    b.Property<long>("QtyPendingReceived")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TotalAmountLine")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Warehouse")
                        .HasColumnType("int");

                    b.HasKey("SalesId", "ItemId");

                    b.ToTable("SimexSalesOrder");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.SnapshotBiableValueMonth", b =>
                {
                    b.Property<long>("SnapshotBiableValueMonthId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MonthId")
                        .HasColumnType("int");

                    b.Property<string>("MonthYear")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ValueBalanceMonth")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("YearId")
                        .HasColumnType("int");

                    b.HasKey("SnapshotBiableValueMonthId");

                    b.ToTable("SnapshotBiableValueMonths");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.SnapshotInventoryQuantify", b =>
                {
                    b.Property<long>("SnapshotInventoryQuantifyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("CantInven")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CantInvenTon")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CantRent")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("CantRentTon")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("DateInventary")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HideZeroInvoiceItems")
                        .HasColumnType("bit");

                    b.Property<int>("MonthInve")
                        .HasColumnType("int");

                    b.Property<bool>("ReceiveRequireInspection")
                        .HasColumnType("bit");

                    b.Property<string>("SyncodeItem")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("YearInve")
                        .HasColumnType("int");

                    b.HasKey("SnapshotInventoryQuantifyId");

                    b.ToTable("SnapshotInventoryQuantifys");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.StateTransactionGeneric", b =>
                {
                    b.Property<long>("StateTransactionGenericId")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("OrderNum")
                        .HasColumnType("bigint");

                    b.Property<long>("TypeTransactionId")
                        .HasColumnType("bigint");

                    b.HasKey("StateTransactionGenericId");

                    b.ToTable("StateTransactionGenerics");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.Tercero", b =>
                {
                    b.Property<long>("TerceroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Adress2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("AfcId")
                        .HasColumnType("bigint");

                    b.Property<long>("AfpId")
                        .HasColumnType("bigint");

                    b.Property<long>("AreaId")
                        .HasColumnType("bigint");

                    b.Property<long>("AreaIdHomologate")
                        .HasColumnType("bigint");

                    b.Property<long>("ArlId")
                        .HasColumnType("bigint");

                    b.Property<long>("CajaCompesacionId")
                        .HasColumnType("bigint");

                    b.Property<long>("CargoId")
                        .HasColumnType("bigint");

                    b.Property<long>("CargoIdHomologate")
                        .HasColumnType("bigint");

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CityBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeEnterprise")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ComercialName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactAdressFamily1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNameFamily1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactParentescoFamily1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactPhoneFamily1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateBirth")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateContractEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateContractStart")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateExpedition")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateIn")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateRetirement")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DayPaysVacations")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("EnterpriseId")
                        .HasColumnType("bigint");

                    b.Property<long>("EpsId")
                        .HasColumnType("bigint");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("LastSalary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("NDC")
                        .HasColumnType("bigint");

                    b.Property<string>("NumDocument")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Photo2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlaceExpedition")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReasonRetirement")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Salary")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Sexo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("SucursalId")
                        .HasColumnType("bigint");

                    b.Property<int>("TypePersonId")
                        .HasColumnType("int");

                    b.Property<long>("TypeTerceroId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("VacationUntil")
                        .HasColumnType("datetime2");

                    b.HasKey("TerceroId");

                    b.HasIndex("TypePersonId");

                    b.HasIndex("TypeTerceroId");

                    b.ToTable("Terceros");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.TransactionGeneric", b =>
                {
                    b.Property<long>("TransactionGenericId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("AuxTerceroId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Cash")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Change")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("CityId")
                        .HasColumnType("int");

                    b.Property<long>("Consecutive")
                        .HasColumnType("bigint");

                    b.Property<string>("ConsecutiveChar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CustomerAccount")
                        .HasColumnType("nvarchar(20)")
                        .HasMaxLength(20);

                    b.Property<DateTime>("DateEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateInit")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DatePayInit")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("DiscountAnticipo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("DocumentExtern")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ModuleId")
                        .HasColumnType("int");

                    b.Property<string>("NameWork")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReponsableTransId")
                        .HasColumnType("int");

                    b.Property<int>("SalesPersonId")
                        .HasColumnType("int");

                    b.Property<bool>("Scheduled")
                        .HasColumnType("bit");

                    b.Property<long>("StateTransactionGenericId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("TerceroId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("TotalBuy")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalOtherDiscount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalPay")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("TotalTax")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("TurnId")
                        .HasColumnType("bigint");

                    b.Property<long>("TypeTransactionId")
                        .HasColumnType("bigint");

                    b.Property<int>("VehicleTypeId")
                        .HasColumnType("int");

                    b.Property<long>("VendedorId")
                        .HasColumnType("bigint");

                    b.Property<long>("WarehouseDestinId")
                        .HasColumnType("bigint");

                    b.Property<long>("WarehouseOriginId")
                        .HasColumnType("bigint");

                    b.Property<decimal>("Wight")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Works")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("TransactionGenericId");

                    b.HasIndex("StateTransactionGenericId");

                    b.HasIndex("TypeTransactionId");

                    b.ToTable("TransactionGenerics");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.TypeAccountingAccount", b =>
                {
                    b.Property<long>("TypeAccountingAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CodCuenta")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeAccountingAccountId");

                    b.ToTable("TypeAccountingAccounts");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.TypeActivity", b =>
                {
                    b.Property<long>("TypeActivityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CategoryId")
                        .HasColumnType("bigint");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeActivityId");

                    b.ToTable("TypeActivitys");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.TypePerson", b =>
                {
                    b.Property<int>("TypePersonId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypePersonId");

                    b.ToTable("TypePersons");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.TypeTax", b =>
                {
                    b.Property<long>("TypeTaxId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Value")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("TypeTaxId");

                    b.ToTable("TypeTaxs");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.TypeTercero", b =>
                {
                    b.Property<long>("TypeTerceroId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CampoPrueba")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeTerceroId");

                    b.ToTable("TypeTerceros");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.TypeTransaction", b =>
                {
                    b.Property<long>("TypeTransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Codigo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("ConecutiveEnd")
                        .HasColumnType("bigint");

                    b.Property<long>("ConecutiveInit")
                        .HasColumnType("bigint");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("TypeTransactionId");

                    b.ToTable("TypeTransactions");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.UnitMeasurement", b =>
                {
                    b.Property<long>("UnitMeasurementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Abreviature")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("ConversionFactor")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UnitMeasurementId");

                    b.ToTable("UnitMeasurements");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.UserApp", b =>
                {
                    b.Property<long>("UserAppId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdminId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.Property<long>("CompanyId")
                        .HasColumnType("bigint");

                    b.Property<string>("PassworNotCry")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("RoleAppId")
                        .HasColumnType("bigint");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ZoneProductId")
                        .HasColumnType("nvarchar(36)")
                        .HasMaxLength(36);

                    b.HasKey("UserAppId");

                    b.HasIndex("RoleAppId");

                    b.HasIndex("ZoneProductId");

                    b.ToTable("UserApps");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.VIews.SViewPO", b =>
                {
                    b.Property<string>("PO")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("PO");

                    b.ToTable("vwPOs");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.Warehouse", b =>
                {
                    b.Property<long>("WarehouseId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsConsignataria")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("QuantifyId")
                        .HasColumnType("bigint");

                    b.HasKey("WarehouseId");

                    b.ToTable("Warehouses");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.AccountingAccount", b =>
                {
                    b.HasOne("adesoft.adepos.webview.Data.Model.TypeAccountingAccount", "TypeAccountingAccount")
                        .WithMany()
                        .HasForeignKey("TypeAccountingAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.DeletedDetailTransactionGeneric", b =>
                {
                    b.HasOne("adesoft.adepos.webview.Data.Model.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.DetailProduction", b =>
                {
                    b.HasOne("adesoft.adepos.webview.Data.Model.Production", null)
                        .WithMany("DetailProductions")
                        .HasForeignKey("ProductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.DetailProductionTercero", b =>
                {
                    b.HasOne("adesoft.adepos.webview.Data.Model.Production", null)
                        .WithMany("DetailTerceros")
                        .HasForeignKey("ProductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.DetailTransactionGeneric", b =>
                {
                    b.HasOne("adesoft.adepos.webview.Data.Model.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("adesoft.adepos.webview.Data.Model.TransactionGeneric", null)
                        .WithMany("Details")
                        .HasForeignKey("TransactionGenericId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.ElectronicBilling.ClosingInvoicedNote", b =>
                {
                    b.HasOne("adesoft.adepos.webview.Data.Model.ElectronicBilling.ClosingInvoiced", "ClosingInvoiced")
                        .WithMany("ClosingInvoicedNotes")
                        .HasForeignKey("ClosingInvoicedId");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.ElectronicBilling.OPInvoicedNote", b =>
                {
                    b.HasOne("adesoft.adepos.webview.Data.Model.ElectronicBilling.OPInvoiced", "OPInvoiced")
                        .WithMany("OPInvoicedNotes")
                        .HasForeignKey("OPInvoicedId");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.ElectronicBilling.SalesInvoiceNote", b =>
                {
                    b.HasOne("adesoft.adepos.webview.Data.Model.ElectronicBilling.SalesInvoice", "SalesInvoice")
                        .WithMany("SalesInvoiceNotes")
                        .HasForeignKey("SalesInvoiceId");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.InventoryXTransaction", b =>
                {
                    b.HasOne("adesoft.adepos.webview.Data.Model.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.Item", b =>
                {
                    b.HasOne("adesoft.adepos.webview.Data.Model.Category", "Category")
                        .WithMany()
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("adesoft.adepos.webview.Data.Model.TypeTax", "TypeTax")
                        .WithMany()
                        .HasForeignKey("TypeTaxId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("adesoft.adepos.webview.Data.Model.UnitMeasurement", "UnitMeasurement")
                        .WithMany()
                        .HasForeignKey("UnitMeasurementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("adesoft.adepos.webview.Data.Model.PL.ZoneProduct", "ZoneProduct")
                        .WithMany("Items")
                        .HasForeignKey("ZoneProductId");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.ItemKit", b =>
                {
                    b.HasOne("adesoft.adepos.webview.Data.Model.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.MovementInventory", b =>
                {
                    b.HasOne("adesoft.adepos.webview.Data.Model.Item", "Item")
                        .WithMany()
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("adesoft.adepos.webview.Data.Model.Warehouse", "Warehouse")
                        .WithMany()
                        .HasForeignKey("WarehouseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.PL.OrderPallet", b =>
                {
                    b.HasOne("adesoft.adepos.webview.Data.Model.PL.ZoneProduct", "ZoneProduct")
                        .WithMany("OrderPallets")
                        .HasForeignKey("ZoneProductId");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.PL.OrderPalletProduct", b =>
                {
                    b.HasOne("adesoft.adepos.webview.Data.Model.PL.OrderPallet", "OrderPallet")
                        .WithMany("OrderPalletProducts")
                        .HasForeignKey("OrderPalletId");

                    b.HasOne("adesoft.adepos.webview.Data.Model.PL.ZoneProduct", "ZoneProduct")
                        .WithMany("OrderPalletProducts")
                        .HasForeignKey("ZoneProductId");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.PL.OrderProduct", b =>
                {
                    b.HasOne("adesoft.adepos.webview.Data.Model.PL.ZoneProduct", "ZoneProduct")
                        .WithMany("OrderProducts")
                        .HasForeignKey("ZoneProductId");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.PL.OrderProductLog", b =>
                {
                    b.HasOne("adesoft.adepos.webview.Data.Model.PL.OrderProductVersion", "OrderProductVersion")
                        .WithMany("OrderProductLogs")
                        .HasForeignKey("OrderProductVersionId");

                    b.HasOne("adesoft.adepos.webview.Data.Model.PL.ZoneProduct", "ZoneProduct")
                        .WithMany("OrderProductLogs")
                        .HasForeignKey("ZoneProductId");
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.Permission", b =>
                {
                    b.HasOne("adesoft.adepos.webview.Data.Model.RoleApp", null)
                        .WithMany("Permissions")
                        .HasForeignKey("RoleAppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.Tercero", b =>
                {
                    b.HasOne("adesoft.adepos.webview.Data.Model.TypePerson", "TypePerson")
                        .WithMany()
                        .HasForeignKey("TypePersonId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("adesoft.adepos.webview.Data.Model.TypeTercero", "TypeTercero")
                        .WithMany()
                        .HasForeignKey("TypeTerceroId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.TransactionGeneric", b =>
                {
                    b.HasOne("adesoft.adepos.webview.Data.Model.StateTransactionGeneric", "StateTransactionGeneric")
                        .WithMany()
                        .HasForeignKey("StateTransactionGenericId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("adesoft.adepos.webview.Data.Model.TypeTransaction", "TypeTransaction")
                        .WithMany()
                        .HasForeignKey("TypeTransactionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("adesoft.adepos.webview.Data.Model.UserApp", b =>
                {
                    b.HasOne("adesoft.adepos.webview.Data.Model.RoleApp", "RoleApp")
                        .WithMany()
                        .HasForeignKey("RoleAppId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("adesoft.adepos.webview.Data.Model.PL.ZoneProduct", "ZoneProduct")
                        .WithMany("Users")
                        .HasForeignKey("ZoneProductId");
                });
#pragma warning restore 612, 618
        }
    }
}
